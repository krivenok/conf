" Detect file types.
filetype on

" Show matched brackets.
set showmatch

" Automatically source
autocmd BufWritePost   ~/.vimrc  :source %
autocmd BufWritePost   ~/.vimrcs/* :source %

" It's required for auto-completion words like 'first_second'.
set iskeyword+=_
set iskeyword-=:
set iskeyword-=.
au BufRead,BufNewFile * setl iskeyword+=_

" Highlight hash keys.
let perl_extended_vars = 1

" Disabling 'next line comments'
" See :help formatoptions for details
set fo-=ro

" Width of the shift
set shiftwidth=2

" Run build command (usually make).
au FileType c,c++ map <F9> :w<Enter> :!make<Enter>

" Mapping for source code beautifier
au FileType perl map <F11> :ma p<Enter> :%!perltidy -b<Enter>:w<Enter> :normal `p<Enter>
au FileType c,c++ map <F11> :%!astyle<Enter>:w<Enter>

" Source code checker
au FileType perl map <F12> :!perlcritic % ; perl -wc %<Enter>

" Highlighting options 
set hlsearch
highlight Normal guibg=lightyellow
highlight Cursor guibg=Black guifg=NONE
highlight NonText guibg=grey80
highlight Constant gui=NONE guibg=grey95
highlight Special gui=NONE guibg=grey95

" Syntax highlighting.
if &t_Co > 2 || has("gui_running")
  syntax on
endif

" Highlight strings and numbers inside a comment.
let c_comment_strings = 1

" Search tags file in top-level directories moving to root directory.
set tags=tags,/ 

if ! exists('$WINDOWID')
  set background=dark
endif

if g:os == "Darwin"
  set background=light
endif

" Scope mappings
nmap <C-\>s :cs find s <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>g :cs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>c :cs find c <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>t :cs find t <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>e :cs find e <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
nmap <C-\>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <C-\>d :cs find d <C-R>=expand("<cword>")<CR><CR>
